(below is a description of my experience and reasoning behind the webpage stored in this directory)




For years, I've been slowly building up a portfolio of written reviews of films I like, using a custom application to save these into JSON format, a popular and simple way to store data with different attributes (example: "title", "score", "review", etc.). By doing this, I can easily use my custom application to generate a tab-delimted table of the JSON data, which I can copy and paste into Microsoft Excel, and within seconds have a way to quickly sort and filter my collection (based on review score, year, alphabetical title, etc.). Handy!

While preparing these, I wondered if one day I might be able to import this collection of JSON files to a blogging website. I usually prefer to use pre-built blogging solutions. But after searching for options like WordPress, Blogger, Tumblr, Wix, Squarespace, and others, I had trouble finding a solution that could simply consider a collection of JSON files as individual blog pages. The best I could find was to be able to copy and paste the contents of each file one by one into individual page posts. With over 200 JSON files and counting, this simply wasn't an option. Also, most blog sites use a "most-recent" organization of viewing past articles, making it difficult to see a categorized list of past writing in any manner. 




After much thought, I decided on trying out the following solution:

- Using Github's "webpage" functionality as a free and easy-to-update option for hosting basic HTML pages (not using their recommended Jekyll API).

- Exporting my easy-to-generate Microsoft Excel document as an HTML file (yes, it can do that) for an easy-to-design instant homepage, complete with an organized table with page links. In addition, I can include the original Excel file in my public Github directory for users to download and browse locally, should they want to filter or organize the blog articles in a different manner. 

- Writing a new custom application to read all "JSON" files in a specific directory, and generate a very basic HTML file with the same name in a different directory. After a one-time initial hour of programming, I can update the web pages I need instantly whenever I write a new review in JSON format. 




This seems like a silly way to tackle the problem. The basic pre-1999 design of my webpages would make people laugh. Something involving "JSON-feeds" might be better suited. My site probably isn't optimized for search engines like Google to find, or for different devices like tablets or smartphones, or high-resolution monitors. But it works for my needs, and frankly, I always preferred a simple webpage when only text is involved. For a site dedicated to just storing reviews, this seems like one of the best designs, from a functional level and an easy-to-implement level, that I could find.

... stop laughing. I'm a programmer, not a web-developer.

The tools I used for this are available somewhere in this directory should you want to reuse it for your own purposes. I don't own the movies I review, but I own and offer this free and open-source method (its tools and design) for personal or commercial use.